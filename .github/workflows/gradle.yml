name: Java+Docker CI

on: 
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: local build of nom-tam-fits fork
      run: |
        cd ..
        git clone --single-branch --branch master https://github.com/opencadc/nom-tam-fits.git
        cd nom-tam-fits
        git branch
        gradle assemble install
        
    - name: build and test storage-inventory-dm
      run: cd storage-inventory-dm && gradle --info clean build xslt
      
    - name: build and test cadc-inventory
      run: cd cadc-inventory && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-inventory-db
      run: cd cadc-inventory-db && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-inventory-util
      run: cd cadc-inventory-util && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-inventory-server
      run: cd cadc-inventory-server && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-storage-adapter
      run: cd cadc-storage-adapter && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-storage-adapter-test
      run: cd cadc-storage-adapter-test && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-storage-adapter-fs
      run: cd cadc-storage-adapter-fs && gradle --info clean build javadoc checkstyleMain install

    - name: build and test cadc-storage-adapter-ad
      run: cd cadc-storage-adapter-ad && gradle --info clean build javadoc checkstyleMain install

    - name: build and test cadc-storage-adapter-s3
      run: cd cadc-storage-adapter-s3 && gradle --info clean build javadoc checkstyleMain install
      
    - name: build and test cadc-storage-adapter-swift
      run: cd cadc-storage-adapter-swift && gradle --info clean build javadoc checkstyleMain install

    - name: java build -- baldur
      run: cd baldur && gradle --info clean build javadoc checkstyleMain

    - name: java build -- critwall 
      run: cd critwall && gradle --info clean build javadoc checkstyleMain
      
    - name: java build -- fenwick
      run: cd fenwick && gradle --info clean build javadoc checkstyleMain
      
    - name: java build -- minoc 
      run: cd minoc && gradle --info clean build javadoc checkstyleMain
      
    - name: java build -- luskan
      run: cd luskan && gradle --info clean build javadoc checkstyleMain
      
    - name: java build -- raven
      run: cd raven && gradle --info clean build javadoc checkstyleMain
      
    - name: java build -- ringhold
      run: cd ringhold && gradle --info clean build javadoc checkstyleMain

## TODO: docker build depends on cadc-tomcat base image from docker-base.git
#    - name: docker build -- baldur
#      run: cd baldur && docker build . --file Dockerfile --tag baldur:$(date +%s)
#    - name: docker build -- minoc
#      run: cd minoc && docker build . --file Dockerfile --tag minoc:$(date +%s)
#    - name: docker build -- luskan
#      run: cd luskan && docker build . --file Dockerfile --tag luskan:$(date +%s)
#    - name: docker build -- raven
#      run: cd raven && docker build . --file Dockerfile --tag raven:$(date +%s)
